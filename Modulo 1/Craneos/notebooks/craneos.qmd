---
title: "Nutrición"
author: "Casas Pontanillo, Oliver Arturo"
format: 
    html:
        toc: true
        fontsize: 1.25em
        html-math-method: katex
        embed-resources: true
        self-contained-math: true
        df-print: kable
---

## Ejemplo de cranéos egipcios

```{python}
import pandas as pd
import numpy as np
from scipy import stats
```

Cargamos los datos

```{python}
skulls = pd.read_csv("../data/skulls.csv")
skulls.head()
```

Creamos la matriz de datos para sexo masculino.

```{python}
X = skulls[skulls["sex"] == "male"].drop(columns="sex")
```

```{python}
X.head()
```
Creamos la matriz de datos para sexo femenino.
```{python}
Y = skulls[skulls["sex"] == "female"].drop(columns="sex")
```

```{python}
Y.head()
```

```{python}
def HotellingsT2Test(X, Y):
    '''Realiza la prueba T2 de Hotelling para dos muestras

       Parámetros
       ----------
       X: pd.DataFrame
           Matriz de datos de la primera población
       Y: pd.DataFrame
           Matriz de datos de la segunda población

       Output
       ------
       statistic: float
           Valor de la estadística de prueba
       p-value: float
           P-value resultante
    '''

    ## Encontramos los tamaños de
    ## muestra y el número de variables
    n, p = X.shape
    m = Y.shape[0]

    ## Calculamos la diferencia de medias
    ## muestrales, las matrices de covarianza
    ## y la matriz de covarianza agrupada
    delta = (X.mean(axis=0) - Y.mean(axis=0)).values
    Sx = X.cov()
    Sy = Y.cov()
    S_pooled = ((n - 1)*Sx + (m - 1)*Sy) / (n + m - 2)

    ## Calculamos la estadística de prueba
    t2 = n*m/(n + m)*(delta @ np.linalg.inv(S_pooled) @ delta)
    statistic = (n + m - p - 1) / (p*(n + m -2))*t2

    ## Calculamos el p-value
    p_value = 1 - stats.f.cdf(statistic, p, n + m - p - 1)

    ## Imprimimos el resultado
    print(f"Estadística de prueba: {statistic}\nGrados de libertad: {p}, {n + m - p - 1}\np-value: {p_value}")

    return statistic, p_value
```


```{python}
HotellingsT2Test(X, Y)
```
